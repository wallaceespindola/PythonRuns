name: CI
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
jobs:
  test:
    name: Test on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12", "3.13"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .
    - name: Lint with ruff (if available)
      run: |
        pip install ruff
        ruff check . || true
      continue-on-error: true
    - name: Run tests with pytest
      run: |
        pytest tests/ -v --tb=short
    - name: Generate coverage report
      run: |
        pip install pytest-cov
        pytest tests/ --cov=pythonruns --cov-report=xml --cov-report=html
      continue-on-error: true
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
      continue-on-error: true
  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
        cache: 'pip'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install ruff black isort mypy
    - name: Check code formatting with black
      run: black --check .
      continue-on-error: true
    - name: Check import sorting with isort
      run: isort --check-only .
      continue-on-error: true
    - name: Lint with ruff
      run: ruff check .
      continue-on-error: true
    - name: Type check with mypy
      run: mypy pythonruns/ --ignore-missing-imports
      continue-on-error: true
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit[toml]
    - name: Check dependencies for security issues
      run: safety check --json || true
      continue-on-error: true
    - name: Run bandit security linter
      run: bandit -r pythonruns/ -f json || true
      continue-on-error: true
  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.12"
        cache: 'pip'
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    - name: Build package
      run: python -m build
    - name: Check package with twine
      run: twine check dist/*
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-packages
        path: dist/
        retention-days: 7
